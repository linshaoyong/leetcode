class Solution(object):
    def maximumProduct(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        sn = sorted(nums)
        f = sn[0] * sn[1]
        if f < 0:
            return sn[-1] * sn[-2] * sn[-3]
        g = sn[-2] * sn[-3]
        return sn[-1] * f if f > g else sn[-1] * g


def test_maximum_product():
    s = Solution()
    assert 6 == s.maximumProduct([1, 2, 3])
    assert 24 == s.maximumProduct([1, 2, 3, 4])
    assert 943695360 == s.maximumProduct(
        [722, 634, -504, -379, 163, -613, -842, -578, 750, 951,
         -158, 30, -238, -392, -487, -797, -157, -374, 999, -5,
         -521, -879, -858, 382, 626, 803, -347, 903, -205, 57,
         -342, 186, -736, 17, 83, 726, -960, 343, -984, 937, -758,
         -122, 577, -595, -544, -559, 903, -183, 192, 825, 368, -674, 57,
         -959, 884, 29, -681, -339, 582, 969, -95, -455, -275, 205, -548, 79,
         258, 35, 233, 203, 20, -936, 878, -868, -458, -882, 867, -664, -892,
         -687, 322, 844, -745, 447, -909, -586, 69, -88, 88, 445, -553, -666,
         130, -640, -918, -7, -420, -368, 250, -786])
